<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >	
<mapper namespace="project06.repository.pmsempRep">
 	<resultMap type="pmsemp" id="pmsempResult"/>
 	<!-- 
	empMapper.xml과 연결 
	EmpRep ==> namspace명
	ArrayList<Emp> ==> ResultMap
	empList ==> id
	Emp ==> parameterType
	resultMap 객체 선언 단위 객체가 모인 객체 선언

 	resultMap은 배열형태로 결과값을 return할 객체
 	resultType 단일 데이터형태로 결과값을 return할 객체
 		 
 		 column ==> vo와 연결하여 ArrayList로 처리..
 	 -->
 	<!-- 데이터 총 건수 -->
 	<select id="totCnt" resultType="int" parameterType="pmsempsch">
 		select count(*) 
		from pmsemp
		where 1=1
		<if test="name!=null and name!=''">
		and name LIKE '%'||#{name}||'%'
		</if>
		<if test="grade!=null and grade!=''">
		and grade LIKE '%'||#{grade}||'%'
		</if>
		<if test="dept!=null and dept!=''">
		and dept LIKE '%'||#{dept}||'%'
		</if>
 	</select> 	
 	<!-- CEO, CTO 사원리스트 불러오기 -->
 	<select id="pmsempList" resultMap="pmsempResult"  parameterType="pmsempsch">
 		SELECT *
 		FROM(
			SELECT rownum cnt, a.eno, a.name, a.GRADE, a.DEPT, a.EMAIL, a.PHONE,  
			(select c.CNAME from pmsmember b, pmscodes c where a.eno=b.mno and b.mdiv=c.cno) cname 
			FROM pmsemp a 
			WHERE 1=1 
			and NOT a.grade LIKE '%'||'대표이사'||'%'
			<if test="name!=null and name!=''">
			and name LIKE '%'||#{name}||'%'
			</if>
			<if test="grade!=null and grade!=''">
			and grade LIKE '%'||#{grade}||'%'
			</if>
			<if test="dept!=null and dept!=''">
			and dept LIKE '%'||#{dept}||'%'
			</if>
			ORDER BY a.eno asc)
		WHERE cnt BETWEEN #{start} AND #{end}
 	</select>	
 	<!-- 상세페이지 -->
 	<select id="getemp" resultType="pmsemp" parameterType="int">
	 	SELECT a.eno, a.name, a.GRADE, a.DEPT, a.EMAIL, a.PHONE,  
			c.CNAME,b.pno
			FROM pmsemp a, pmsmember b, pmscodes c
			WHERE b.mdiv=c.cno(+)
			AND a.eno = b.mno(+)
			AND a.eno = #{eno}
 	</select>
 	<!-- 프로젝트 리스트 -->
 	<select id="getPlist" resultMap="pmsEmpEnoResult">
		select pno 
		from pmsproject
		order by pno asc 
	</select>
 	<!-- pmsmember에 등록 됐는지 확인 -->
 	<select id="memCheck" resultType="int" parameterType="pmsemp">
		select count(*) 
		from pmsmember 
		where mno=#{eno}
	</select>
	<!-- pms에 등록안된 경우 CEO로등록 -->
	<insert id="insertCeo1" parameterType="pmsemp">
		 insert into pmsmember 
		 	values(#{eno}, #{pass}, 2, #{phone}, null)
	</insert>
 	<!-- 기존 CEO 권한변경 -->
	<update id="updatepmsCeo2" parameterType="pmsemp">
		UPDATE pmsmember
		SET mdiv=9
		WHERE mdiv=2
	</update>
	<update id="updatepmsCeo3" parameterType="pmsemp">
		UPDATE pmsemp
		SET grade='사원'
		WHERE grade='대표이사'
	</update>
 	<!-- CEO설정 -->
	<update id="updatepmsCeo1" parameterType="pmsemp">
		UPDATE pmsmember
		SET mdiv=2
		WHERE mno=#{eno}
	</update>
	<update id="updatepmsCeo4" parameterType="pmsemp">
		UPDATE pmsemp
		SET grade='대표이사'
		WHERE eno=#{eno}
	</update>
	<!-- pms에 등록안된 경우 CTO로등록 -->
	<insert id="insertMem1" parameterType="pmsemp">
		 insert into pmsmember 
		 	values(#{eno}, #{pass}, 3, #{phone}, null)
	</insert>
 	<!-- 기존 CTO 권한변경 -->
	<update id="updatepmsemp2" parameterType="pmsemp">
		UPDATE pmsmember
		SET mdiv=9
		WHERE mdiv=3
	</update>
 	<!-- CTO설정 -->
	<update id="updatepmsemp1" parameterType="pmsemp">
		UPDATE pmsmember
		SET mdiv=3
		WHERE mno=#{eno}
	</update>
	<!-- pms에 등록안된 경우 PM으로등록 -->
	<insert id="insertMem2" parameterType="pmsemp">
		 insert into pmsmember 
		 	values(#{eno}, #{pass}, 4, #{phone}, #{pno})
	</insert>
	<!-- PM 권한해제 설정 -->
	<update id="updatePm2" parameterType="pmsemp">
		UPDATE pmsmember
		SET mdiv=9, pno=null
		WHERE mdiv=4
		and pno=#{pno}
	</update>
	<!-- PM 권한 설정  -->
	<update id="updatePm1" parameterType="pmsemp">
		UPDATE pmsmember
		SET mdiv=4, pno=#{pno}
		WHERE mno=#{eno}
	</update>
	<update id="updatePm3" parameterType="pmsemp">
		UPDATE pmstask
		SET mno=#{eno}
		WHERE mno=
			(select p.mno 
			from pmsproject p 
			where p.pno=#{pno})
	</update>
	<update id="updatePm4" parameterType="pmsemp">
		UPDATE pmsproject
		SET mno=#{eno}
		WHERE pno=#{pno}
	</update>
 	<!-- PM 팀원 추가 리스트 -->
 	<select id="insList" resultMap="pmsempResult" parameterType="pmsempsch">
 	<!-- SELECT *
 	FROM(
			SELECT *
			FROM (
			SELECT rownum cnt,a.eno, a.name, a.GRADE, a.DEPT, a.EMAIL, a.PHONE,  
			c.CNAME,b.pno
			FROM pmsemp a, pmsmember b, pmscodes c
			WHERE a.eno = b.mno and b.mdiv=c.cno
			AND c.cno =9 
			AND b.pno is NULL
			UNION ALL
			select rownum cnt,a.eno, a.name, a.GRADE, a.DEPT, a.EMAIL, a.PHONE,  
					c.CNAME,b.pno
			from (pmsemp a left outer join pmsMember b on a.eno=b.mno), pmscodes c
			where b.mno is NULL AND c.cno=9)
			ORDER BY eno ASC)
	WHERE cnt BETWEEN #{start} AND #{end} -->
	SELECT *
 	FROM(
			SELECT *
			FROM (
			SELECT rownum cnt,a.eno, a.name, a.GRADE, a.DEPT, a.EMAIL, a.PHONE,  
			c.CNAME,b.pno
			FROM pmsemp a, pmsmember b, pmscodes c
			WHERE a.eno = b.mno and b.mdiv=c.cno
			AND c.cno =9 
			AND b.pno is NULL
			<if test="name!=null and name!=''">
			and name LIKE '%'||#{name}||'%'
			</if>
			<if test="grade!=null and grade!=''">
			and grade LIKE '%'||#{grade}||'%'
			</if>
			<if test="dept!=null and dept!=''">
			and dept LIKE '%'||#{dept}||'%'
			</if>
			UNION ALL
			select rownum cnt,a.eno, a.name, a.GRADE, a.DEPT, a.EMAIL, a.PHONE,  
					c.CNAME,b.pno
			from (pmsemp a left outer join pmsMember b on a.eno=b.mno), pmscodes c
			where b.mno is NULL 
			AND c.cno=9
			<if test="name!=null and name!=''">
			and name LIKE '%'||#{name}||'%'
			</if>
			<if test="grade!=null and grade!=''">
			and grade LIKE '%'||#{grade}||'%'
			</if>
			<if test="dept!=null and dept!=''">
			and dept LIKE '%'||#{dept}||'%'
			</if>)
			ORDER BY eno ASC)
	WHERE cnt BETWEEN #{start} AND #{end} 
 	</select>
 	<!-- PM선정 리스트 총인원 -->
 	<select id="selectpmCount" resultType="int" parameterType="pmsempsch">
		SELECT count(*)
		FROM (
				SELECT a.eno, a.name, a.GRADE, a.DEPT, a.EMAIL, a.PHONE, b.WCON,  
				c.CNAME,b.pno
				FROM pmsemp a, pmsmember b, pmscodes c
				WHERE a.eno = b.mno and b.mdiv=c.cno
				AND c.cno =9 
				AND b.pno is NULL
				UNION ALL
				select a.eno, a.name, a.GRADE, a.DEPT, a.EMAIL, a.PHONE, b.WCON,  
						c.CNAME,b.pno
				from (pmsemp a left outer join pmsMember b on a.eno=b.mno), pmscodes c
				where b.mno is NULL AND c.cno=9
			)
		<if test="mdiv==2 or mdiv==3 or mdiv==6">
		WHERE NOT grade = '사원'
		</if>
		<if test="name!=null and name!=''">
		AND name like '%'||#{name}||'%'
		</if>
		ORDER BY eno ASC
	</select>
 	<!-- PM 팀원 추가 리스트(PM선정) -->
 	<select id="selectpm" resultMap="pmsempResult" parameterType="pmsempsch">
 	SELECT *
 		FROM(
			SELECT *
			FROM (
			SELECT rownum cnt,a.eno, a.name, a.GRADE, a.DEPT, a.EMAIL, a.PHONE, b.WCON,  
			c.CNAME,b.pno
			FROM pmsemp a, pmsmember b, pmscodes c
			WHERE a.eno = b.mno and b.mdiv=c.cno
			AND c.cno =9 
			AND b.pno is NULL
			UNION ALL
			select rownum cnt,a.eno, a.name, a.GRADE, a.DEPT, a.EMAIL, a.PHONE, b.WCON,  
					c.CNAME,b.pno
			from (pmsemp a left outer join pmsMember b on a.eno=b.mno), pmscodes c
			where b.mno is NULL AND c.cno=9)
			<if test="mdiv==2 or mdiv==3 or mdiv==6">
			WHERE NOT grade = '사원'
			</if>
			<if test="name!=null and name!=''">
				AND name like '%'||#{name}||'%'
			</if>
			ORDER BY eno ASC)
	WHERE cnt BETWEEN #{start} AND #{end}		
 	</select>
 	<!-- pms등록된 직원 팀원추가 -->
 	<update id="updPNum" parameterType="pmsemp">
		UPDATE pmsmember
		SET pno=#{pno}, mdiv=5
		WHERE mno =#{eno}
	</update>	
 	<!-- pms등록안된 직원 팀원추가 -->
 	<insert id="insPNum" parameterType="pmsemp">
		 insert into pmsmember 
		 	values(#{eno}, #{pass}, 5, #{phone}, #{pno})
	</insert>
 	<!-- pm 프로젝트 팀원 삭제 리스트 -->
 	<select id="pmempList" resultMap="pmsempResult" parameterType="pmsempsch">
 	SELECT *
 		FROM(
		SELECT rownum cnt, a.eno, a.name, a.GRADE, a.DEPT, a.EMAIL, a.PHONE,  
		c.CNAME,b.pno
		FROM pmsemp a, pmsmember b, pmscodes c
		WHERE a.eno = b.mno and b.mdiv=c.cno
		AND b.pno=#{pno}
		AND b.mdiv=5
		<if test="name!=null and name!=''">
		and a.name LIKE '%'||#{name}||'%'
		</if>
		<if test="grade!=null and grade!=''">
		and a.grade LIKE '%'||#{grade}||'%'
		</if>
		<if test="dept!=null and dept!=''">
		and a.dept LIKE '%'||#{dept}||'%'
		</if>
		ORDER BY eno ASC)
	WHERE cnt BETWEEN #{start} AND #{end}
 	</select>
	<!-- 팀원삭제  pno==>null로 변경 -->
	<update id="delemp" parameterType="pmsemp">
		UPDATE pmsmember
		SET pno=null, mdiv=9
		WHERE mno =#{eno}
	</update>	
	<!-- 인사 사원정보 수정 페이지 -->
	<select id="getPmsemp" resultType="pmsemp" parameterType="int">
 		SELECT *
 		FROM pmsemp
 		WHERE eno = #{eno}
 	</select>
	<!-- 사원정보 수정 -->
	<update id="updateEmp" parameterType="pmsemp">
	UPDATE pmsemp
		SET dept =#{dept}, grade =#{grade}
		WHERE eno =#{eno}
	</update>
	<!-- 퇴사처리 -->
	<!-- pms등록된 직원 -->
	<update id="delGrade1" parameterType="pmsemp">
		UPDATE pmsemp
			SET grade = '퇴사', dept = null
			WHERE eno =#{eno}
	</update>
	<update id="delGrade2" parameterType="pmsemp">
		UPDATE pmsmember
			SET mdiv = 8 , pno = null
			WHERE mno =#{eno}
	</update>
	<!-- pms등록 안된 직원 -->
	<delete id="delGrade3" parameterType="pmsemp">
		delete from pmsemp
			WHERE eno =#{eno}
	</delete>
	<!-- 사원등록 -->
	<insert id="insert" parameterType="pmsemp">
		 insert into pmsemp values(pmsemp_seq.nextval,#{name},#{dept},
		 					#{grade},#{phone},#{email})
	</insert>
	<resultMap type="String" id="pmsEmpStringResult"/>
	<!-- 직급 리스트 -->
	<select id="getGlist" resultMap="pmsEmpStringResult">
		select DISTINCT grade 
		from pmsemp
		order by grade asc 
	</select>
	<!-- 부서 리스트 -->
	<select id="getDlist" resultMap="pmsEmpStringResult">
		select DISTINCT dept
		from pmsemp
		WHERE dept IS NOT null
		order by dept ASC
	</select>
	
	
	
	
	
<!-- Jin -->
	<resultMap type="int" id="pmsEmpEnoResult"/>
	<select id="pmsEmpCounter" resultType="int" parameterType="int">
 		SELECT count(*) FROM pmsemp WHERE name=#{name} AND email=#{email}
 	</select>
 	
	<select id="pmsEmpEno" resultMap="pmsEmpEnoResult" parameterType="int">
		SELECT eno FROM pmsemp WHERE name=#{name} AND email=#{email}
	</select>

<!-- Jin -->
	<resultMap type="int" id="pmsEmpPassResult"/>
	<select id="pmsEmpPassCounter" resultType="int" parameterType="int">
 		SELECT count(*) FROM pmsemp WHERE eno=#{eno} AND name=#{name} AND email=#{email}
 	</select>	
	<select id="pmsEmpPass" resultMap="pmsEmpPassResult" parameterType="int">
		SELECT eno FROM pmsemp WHERE eno=#{eno} AND name=#{name} AND email=#{email}
	</select>
	
	
<!-- 팀원만 보기 -->
	<select id="pmsElist" resultMap="pmsempResult" parameterType="pmsemp">
	 	SELECT pe.eno, pm.MDIV, pe.name, pe.GRADE
		FROM pmsmember pm, pmsemp pe
		WHERE pm.MDIV = 5
		AND pe.eno = pm.mNO
 	</select>
	
	
	
</mapper>	